name: Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  commit-stage:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Compile the code
        run: gradle build

      - name: Run Unit Tests
        run: gradle test

      - name: Run Integration Tests
        run: gradle integrationTest

      - name: Code Analysis (optional)
        run: gradle check

      - name: Create Installers
        run: gradle assemble

  acceptance-stage:
    runs-on: ubuntu-latest
    needs: commit-stage
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Run Smoke Tests
        run: gradle smokeTest

      - name: Run Acceptance Tests
        run: gradle acceptanceTest

      - name: Run Capacity Tests (optional)
        run: gradle capacityTest

  production-stage:
    runs-on: ubuntu-latest
    needs: acceptance-stage
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t myapp:${{ github.sha }} .

      - name: Push Docker Image
        run: docker push myapp:${{ github.sha }}

      - name: Deploy to Production
        run: |
          docker run -d -p 80:80 myapp:${{ github.sha }}
